///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	Contains code to compute the minimal bounding sphere.
 *	\file		IceBoundingSphere.h
 *	\author		Pierre Terdiman
 *	\date		January, 29, 2000
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef __ICEBOUNDINGSPHERE_H__
#define __ICEBOUNDINGSPHERE_H__
#include "IcePoint.h"

class Sphere
{
public:
	//! Constructor
	inline Sphere() {}
	//! Constructor
	inline Sphere(const Point &center, float radius) : mCenter(center), mRadius(radius) {}

	//! Copy constructor
	inline Sphere(const Sphere &sphere) : mCenter(sphere.mCenter), mRadius(sphere.mRadius) {}

public:
	Point mCenter; //!< Sphere center
	float mRadius; //!< Sphere radius
};

#endif // __ICEBOUNDINGSPHERE_H__
